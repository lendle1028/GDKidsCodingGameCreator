/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imsofa.kidscoding.gdbuilder.editors;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author lendle
 */
public class GridObjectEditor extends javax.swing.JPanel implements GDFileEditor {

    private boolean modified = false;
    private GridObjectModel model = null;
    private List<ModifiedListener> modifiedListeners = new ArrayList<>();

    @Override
    public void addModifiedListener(ModifiedListener l) {
        modifiedListeners.add(l);
    }

    @Override
    public void removeModifiedListener(ModifiedListener l) {
        modifiedListeners.remove(l);
    }

    public void setModified(boolean modified) {
        this.modified = modified;
        if (modified == true) {
            for (ModifiedListener l : modifiedListeners) {
                l.modified();
            }
        }
    }

    public boolean isModified() {
        return modified;
    }

    /**
     * Creates new form GridObjectEditor
     */
    public GridObjectEditor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textType = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textGdPath = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboKinematicObject = new javax.swing.JComboBox<>();
        buttonCustomInit = new javax.swing.JButton();
        buttonCustomCodes = new javax.swing.JButton();

        jLabel1.setText("Type:");

        textType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textTypeKeyPressed(evt);
            }
        });

        jLabel2.setText("gdPath:");

        textGdPath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textGdPathKeyPressed(evt);
            }
        });

        jLabel3.setText("kinematicObject:");

        comboKinematicObject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TRUE", "FALSE" }));
        comboKinematicObject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboKinematicObjectActionPerformed(evt);
            }
        });

        buttonCustomInit.setText("Custom Init");
        buttonCustomInit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCustomInitActionPerformed(evt);
            }
        });

        buttonCustomCodes.setText("Custom Codes");
        buttonCustomCodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCustomCodesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonCustomInit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textType)
                            .addComponent(textGdPath)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboKinematicObject, 0, 248, Short.MAX_VALUE))
                    .addComponent(buttonCustomCodes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textGdPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboKinematicObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonCustomInit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonCustomCodes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCustomInitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCustomInitActionPerformed
        // TODO add your handling code here:
        GDEditorDialog dlg = new GDEditorDialog(null, model.getCustomInit());
        dlg.setSize(800, 600);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);
        if (dlg.getCode().equals(model.getCustomInit()) == false) {
            model.setCustomInit(dlg.getCode());
            setModified(true);
        }
    }//GEN-LAST:event_buttonCustomInitActionPerformed

    private void buttonCustomCodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCustomCodesActionPerformed
        // TODO add your handling code here:
        GDEditorDialog dlg = new GDEditorDialog(null, model.getCustomCodes());
        dlg.setSize(800, 600);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);
        if (dlg.getCode().equals(model.getCustomCodes()) == false) {
            model.setCustomCodes(dlg.getCode());
            setModified(true);
        }
    }//GEN-LAST:event_buttonCustomCodesActionPerformed

    private void textTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTypeKeyPressed
        // TODO add your handling code here:
        setModified(true);
    }//GEN-LAST:event_textTypeKeyPressed

    private void textGdPathKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textGdPathKeyPressed
        // TODO add your handling code here:
        setModified(true);
    }//GEN-LAST:event_textGdPathKeyPressed

    private void comboKinematicObjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboKinematicObjectActionPerformed
        // TODO add your handling code here:
        setModified(true);
    }//GEN-LAST:event_comboKinematicObjectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCustomCodes;
    private javax.swing.JButton buttonCustomInit;
    private javax.swing.JComboBox<String> comboKinematicObject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField textGdPath;
    private javax.swing.JTextField textType;
    // End of variables declaration//GEN-END:variables

    @Override
    public void init(File gdFile) {
        try {
            String code = FileUtils.readFileToString(gdFile, "utf-8");
            model = GridObjectModelFactory.code2Model(code);
            this.textGdPath.setText(model.getGdPath());
            this.textType.setText(model.getType());
            this.comboKinematicObject.setSelectedItem(model.isKinematicObject() ? "TRUE" : "FALSE");
            if (model.getCustomInit() == null) {
                model.setCustomInit("func __init__():\r\n\treturn");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public String getCode() {
        return GridObjectModelFactory.model2Code(model);
    }
}
