/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imsofa.kidscoding.gdbuilder.editors;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.io.FileUtils;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author lendle
 */
public class GDTextArea extends javax.swing.JPanel implements GDFileEditor {

    private boolean modified = false;
    private String originalText = null;
    private List<ModifiedListener> modifiedListeners = new ArrayList<>();

    @Override
    public void addModifiedListener(ModifiedListener l) {
        modifiedListeners.add(l);
    }

    @Override
    public void removeModifiedListener(ModifiedListener l) {
        modifiedListeners.remove(l);
    }

    /**
     * Creates new form GDTextArea
     */
    public GDTextArea() {
        initComponents();
        ((RSyntaxTextArea) this.code).setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_PYTHON);
        ((RSyntaxTextArea) this.code).setAutoIndentEnabled(true);
        ((RTextScrollPane) jScrollPane1).setLineNumbersEnabled(true);
    }
    
    public void setModified(boolean modified) {
        this.modified = modified;
    }

    public String getCode() {
        return this.code.getText();
    }

    public void setCode(String code) {
        originalText = code;
        this.code.setText(code);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new RTextScrollPane((RSyntaxTextArea)code);
        code = new RSyntaxTextArea();

        setLayout(new java.awt.BorderLayout());

        code.setColumns(20);
        code.setRows(5);
        code.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codeFocusLost(evt);
            }
        });
        code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(code);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void codeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codeFocusLost
        // TODO add your handling code here:
        if (code.getText().equals(originalText) == false) {
            modified = true;
            for (ModifiedListener l : modifiedListeners) {
                l.modified();
            }
        }
    }//GEN-LAST:event_codeFocusLost

    private void codeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeKeyPressed
        // TODO add your handling code here:
        if (code.getText().equals(originalText) == false) {
            modified = true;
            for (ModifiedListener l : modifiedListeners) {
                l.modified();
            }
        }
    }//GEN-LAST:event_codeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea code;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void init(File gdFile) {
        try {
            String code = FileUtils.readFileToString(gdFile, "utf-8");
            this.setCode(code);
            modified = false;
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public boolean isModified() {
        return modified;
    }
}
